{"remainingRequest":"D:\\Angular-Test\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\Angular-Test\\node_modules\\rxjs\\_esm5\\operators\\timestamp.js","dependencies":[{"path":"D:\\Angular-Test\\node_modules\\rxjs\\_esm5\\operators\\timestamp.js","mtime":1517715515435},{"path":"D:\\Angular-Test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Angular-Test\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START .._scheduler_async,._map PURE_IMPORTS_END */\r\nimport { async } from '../scheduler/async';\r\nimport { map } from './map';\r\n/**\r\n * @param scheduler\r\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\r\n * @method timestamp\r\n * @owner Observable\r\n */\r\nexport function timestamp(scheduler) {\r\n    if (scheduler === void 0) {\r\n        scheduler = async;\r\n    }\r\n    return map(function (value) { return new Timestamp(value, scheduler.now()); });\r\n    // return (source: Observable<T>) => source.lift(new TimestampOperator(scheduler));\r\n}\r\nexport var Timestamp = /*@__PURE__*/ (function () {\r\n    function Timestamp(value, timestamp) {\r\n        this.value = value;\r\n        this.timestamp = timestamp;\r\n    }\r\n    return Timestamp;\r\n}());\r\n;\r\n//# sourceMappingURL=timestamp.js.map \r\n",null]}